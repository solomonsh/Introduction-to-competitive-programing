public class Sorting{
static int [] data = {3,2,1,4};


public static void mergeSort() {
        sortArray(0, data.length - 1);

    }

    private static void sortArray(int low, int high) {

        if ((high - low) >= 1) 
        {
            int middle1 = (low + high) / 2;  
            int middle2 = middle1 + 1;  
            sortArray(low, middle1);  
            sortArray(middle2, high);  
            merge(low, middle1, middle2, high);

        }
    }

    private static void merge(int left, int middle1, int middle2, int right) {
        int leftIndex = left;
        int rightIndex = middle2;
        int combinedIndex = left;
        int[] combined = new int[data.length];
        while (leftIndex <= middle1 && rightIndex <= right) {
            if (data[leftIndex] <= data[rightIndex]) {
                combined[combinedIndex++] = data[leftIndex++];
            } else {
                combined[combinedIndex++] = data[rightIndex++];
            }
        }
        if (leftIndex == middle2) {
            while (rightIndex <= right) {
                combined[combinedIndex++] = data[rightIndex++];
            }
        } else {
            while (leftIndex <= middle1) {
                combined[combinedIndex++] = data[leftIndex++];
            }
        }

        for (int i = left; i <= right; i++) {
            data[i] = combined[i];
        }

    }
    public staic void main(String [] args){
      for(int k = 0; k<data.length;k++){
      
      System.out.println(data[k]);
      }
    }
    
    }
    
